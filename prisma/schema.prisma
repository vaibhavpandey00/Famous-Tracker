generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  session_id    String    @id @default(auto()) @map("_id") @db.ObjectId
  id            String    @unique
  shop          String    @unique
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        String?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

// Define an embedded type for Socials
type Social {
  platform  String
  link      String
  followers Int?
}

model GlobalCelebrity {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName       String
  normalizedName String   @unique
  categories     String[]
  socials        Social[]
  maxFollower    String?
  note           String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([categories])
  @@index([fullName])
}

// A CUSTOM watchlist item. This belongs to ONE store.
model CustomWatchlistItem {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  normalizedName String
  category       String? @default("Custom")
  shopId         String  @db.ObjectId
  store          Shops   @relation(fields: [shopId], references: [id])

  @@unique([shopId, name])
}

model Shops {
  id                 String                @id @default(auto()) @map("_id") @db.ObjectId
  shopId             String                @unique
  shopName           String?               @unique
  subscriptionStatus HasActiveSubs
  name               String?
  email              String?               @unique
  emailAlerts        Boolean               @default(false)
  slackAlerts        Boolean               @default(false)
  webhookAlerts      Boolean               @default(true)
  inAppAlerts        Boolean               @default(false)
  minimumOrderValue  Int                   @default(1)
  minimumFollowers   Int                   @default(100)
  categories         ShopCategories
  alertFrequency     String                @default("immediate")
  quietHours         ShopQuietHours
  termsAccepted      Boolean?              @default(false)
  customWatchlist    CustomWatchlistItem[]
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
}

type HasActiveSubs {
  active Boolean @default(false)
  subId  String?
}

// Embedded document for Alert Categories
type ShopCategories {
  celebrity  Boolean @default(true)
  influencer Boolean @default(true)
  athlete    Boolean @default(true)
  musician   Boolean @default(true)
}

// Embedded document for Quiet Hours
type ShopQuietHours {
  enabled Boolean @default(false)
  start   String  @default("22:00")
  end     String  @default("08:00")
}
